load("ames_train.Rdata")
ames_train_red <- ames_train[,!(names(ames_train) %in% drops)]
drops <- c("Bsmt.Qual", "Bsmt.Cond", "Bsmt.Exposure", "BsmtFin.Type.1", "Bsmt.Fin.Type.2", "Bsmt.SF.1", "Bsmt.SF.2", "Bsmt.Unf.SF",
"Total.Bsmt.SF", "Bsmt.Full.Bath", "Bsmt.Half.Bath", "Garage.Type", "Garage.Yr.Blt", "Garage.Finish", "Garage.Cars",
"Garage.Area", "Garage.Qual", "Garage.Cond", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch", "X3Ssn.Porch",
"Screen.Porch", "Pool.Area", "Fence")
ames_train_red <- ames_train[,!(names(ames_train) %in% drops)]
ames_train %>% group_by(Mas.Vnr.Type) %>% summarise(n())
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(scales)
library(GGally)
install.packages("GGally")
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(scales)
library(GGally)
ames_train %>% group_by(Mas.Vnr.Type) %>% summarise(n())
load("ames_train.Rdata")
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(scales)
library(GGally)
# Change alley characteristics to include whether there's an alley at all.
ames_train$Alley_vals <- as.character(ames_train$Alley)
ames_train$Alley_vals[is.na(ames_train$Alley_vals)] <- "No alley"
ames_train$basement_dummy <- TRUE
ames_train$basement_dummy[is.na(ames_train$Bsmt.Qual) | ames_train$Bsmt.Qual == ""] <- FALSE
ames_train$garage_dummy <- TRUE
ames_train$garage_dummy[is.na(ames_train$Garage.Type)] <- FALSE
ames_train$deck_dummy <- FALSE
ames_train$deck_dummy[ames_train$Wood.Deck.SF>0] <- TRUE
ames_train$porch_dummy <- FALSE
ames_train$porch_dummy[ames_train$Open.Porch.SF>0] <- TRUE
ames_train$porch_dummy[ames_train$Enclosed.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$X3Ssn.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$Screen.Porch>0] <- TRUE
ames_train$pool_dummy <- FALSE
ames_train$pool_dummy[ames_train$Pool.Area>0] <- TRUE
ames_train$fence_dummy <- TRUE
ames_train$fence_dummy[is.na(ames_train$Fence)] <- FALSE
drops <- c("PID", "Bsmt.Qual", "Bsmt.Cond", "Bsmt.Exposure", "BsmtFin.Type.1", "BsmtFin.Type.2", "BsmtFin.SF.1", "BsmtFin.SF.2", "Bsmt.Unf.SF",
"Total.Bsmt.SF", "Bsmt.Full.Bath", "Bsmt.Half.Bath", "Garage.Type", "Garage.Yr.Blt", "Garage.Finish", "Garage.Cars",
"Garage.Area", "Garage.Qual", "Garage.Cond", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch", "X3Ssn.Porch",
"Screen.Porch", "Pool.Area", "Fence", "Fireplace.Qu", "Pool.QC", "Misc.Feature", "Misc.Val", "Yr.Sold", "Mo.Sold", "Sale.Type",
"Sale.Condition", "Mas.Vnr.Type", "Mas.Vnr.Area")
ames_train_red <- ames_train[,!(names(ames_train) %in% drops)]
ames_train %>% group_by(Mas.Vnr.Type) %>% summarise(n())
ames_train %>% group_by(Condition.1) %>% summarise(n())
ames_train %>% group_by(Condition.2) %>% summarise(n())
initial.model <- lm(log(price) ~
log(area) +
log(Lot.Area) +
Neighborhood +
Overall.Cond +
Overall.Qual +
Full.Bath +
Bedroom.AbvGr +
Year.Built +
House.Style +
Bldg.Type
,data=ames_train_red)
summary(initial.model)
ames_train <- ames_train %>% mutate(bathrooms = Full.Bath * 1 + Half.Bath * 0.5)
initial.model <- lm(log(price) ~
log(area) +
log(Lot.Area) +
Neighborhood +
Overall.Cond +
Overall.Qual +
Bathrooms +
Bedroom.AbvGr +
Year.Built +
House.Style +
Bldg.Type
,data=ames_train_red)
initial.model <- lm(log(price) ~
log(area) +
log(Lot.Area) +
Neighborhood +
Overall.Cond +
Overall.Qual +
bathrooms +
Bedroom.AbvGr +
Year.Built +
House.Style +
Bldg.Type
,data=ames_train_red)
summary(initial.model)
initial.model <- lm(log(price) ~
log(area) +
log(Lot.Area) +
Neighborhood +
Overall.Cond +
Overall.Qual +
bathrooms +
Bedroom.AbvGr +
Year.Built +
House.Style +
Bldg.Type
,data=ames_train_red)
ames_train$price <- log(ames_train$price)
model.full <- lm(log(price) + ., data = ames_train_red)
missing <- sapply(ames_train, function(x) sum(is.na(x)))
missing[missing>0]
load("ames_train.Rdata")
library(statsr)
library(dplyr)
library(BAS)
library(ggplot2)
library(scales)
library(GGally)
names(ames_train)
missing <- sapply(ames_train, function(x) sum(is.na(x)))
missing[missing>0]
ames_train %>% group_by(Sale.Condition) %>% summarise(records = n())
ames_train <- ames_train %>% filter(Sale.Condition == "Normal")
ames_train <- ames_train[!names(ames_train) == "Sale.Condition"]
# Change alley characteristics to include whether there's an alley at all.
ames_train$Alley_vals <- as.character(ames_train$Alley)
ames_train$Alley_vals[is.na(ames_train$Alley_vals)] <- "No alley"
ames_train$basement_dummy <- TRUE
ames_train$basement_dummy[is.na(ames_train$Bsmt.Qual) | ames_train$Bsmt.Qual == ""] <- FALSE
ames_train$garage_dummy <- TRUE
ames_train$garage_dummy[is.na(ames_train$Garage.Type)] <- FALSE
ames_train$deck_dummy <- FALSE
ames_train$deck_dummy[ames_train$Wood.Deck.SF>0] <- TRUE
ames_train$porch_dummy <- FALSE
ames_train$porch_dummy[ames_train$Open.Porch.SF>0] <- TRUE
ames_train$porch_dummy[ames_train$Enclosed.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$X3Ssn.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$Screen.Porch>0] <- TRUE
ames_train$pool_dummy <- FALSE
ames_train$pool_dummy[ames_train$Pool.Area>0] <- TRUE
ames_train$fence_dummy <- TRUE
ames_train$fence_dummy[is.na(ames_train$Fence)] <- FALSE
ames_train <- ames_train %>% mutate(bathrooms = Full.Bath * 1 + Half.Bath * 0.5)
ames_train$area <- log(ames_train$area)
ames_train$Lot.Area <- log(ames_train$Lot.Area)
drops <- c("PID", "Lot.Frontage", "Bsmt.Qual", "Bsmt.Cond", "Bsmt.Exposure", "BsmtFin.Type.1", "BsmtFin.Type.2", "BsmtFin.SF.1", "BsmtFin.SF.2", "Bsmt.Unf.SF",
"Total.Bsmt.SF", "Bsmt.Full.Bath", "Bsmt.Half.Bath", "Garage.Type", "Garage.Yr.Blt", "Garage.Finish", "Garage.Cars",
"Garage.Area", "Garage.Qual", "Garage.Cond", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch", "X3Ssn.Porch",
"Screen.Porch", "Pool.Area", "Fence", "Fireplace.Qu", "Pool.QC", "Misc.Feature", "Misc.Val", "Yr.Sold", "Mo.Sold", "Sale.Type",
"Sale.Condition", "Mas.Vnr.Type", "Mas.Vnr.Area", "X1st.Flr.SF", "X2nd.Flr.SF", "Low.Qual.Fin.SF", "TotRms.AbvGrd", "Condition.2")
ames_train_red <- ames_train[,!(names(ames_train) %in% drops)]
ames_train %>% group_by(Condition.2) %>% summarise(n())
missing <- sapply(ames_train_red, function(x) sum(is.na(x)))
missing[missing>0]
ames_train$MS.SubClass <- as.character(ames_train$MS.SubClass) # change to character data type
ames_train$MS.SubClass[nchar(ames_train$MS.SubClass)==2] <- paste0("0",ames_train$MS.SubClass[nchar(ames_train$MS.SubClass)==2])
# Change alley characteristics to include whether there's an alley at all.
ames_train$Alley_vals <- as.character(ames_train$Alley)
ames_train$Alley_vals[is.na(ames_train$Alley_vals)] <- "No alley"
ames_train$basement_dummy <- TRUE
ames_train$basement_dummy[is.na(ames_train$Bsmt.Qual) | ames_train$Bsmt.Qual == ""] <- FALSE
ames_train$garage_dummy <- TRUE
ames_train$garage_dummy[is.na(ames_train$Garage.Type)] <- FALSE
ames_train$deck_dummy <- FALSE
ames_train$deck_dummy[ames_train$Wood.Deck.SF>0] <- TRUE
ames_train$porch_dummy <- FALSE
ames_train$porch_dummy[ames_train$Open.Porch.SF>0] <- TRUE
ames_train$porch_dummy[ames_train$Enclosed.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$X3Ssn.Porch>0] <- TRUE
ames_train$porch_dummy[ames_train$Screen.Porch>0] <- TRUE
ames_train$pool_dummy <- FALSE
ames_train$pool_dummy[ames_train$Pool.Area>0] <- TRUE
ames_train$fence_dummy <- TRUE
ames_train$fence_dummy[is.na(ames_train$Fence)] <- FALSE
ames_train <- ames_train %>% mutate(bathrooms = Full.Bath * 1 + Half.Bath * 0.5)
ames_train$area <- log(ames_train$area)
ames_train$Lot.Area <- log(ames_train$Lot.Area)
drops <- c("PID", "Lot.Frontage", "Bsmt.Qual", "Bsmt.Cond", "Bsmt.Exposure", "BsmtFin.Type.1", "BsmtFin.Type.2", "BsmtFin.SF.1", "BsmtFin.SF.2", "Bsmt.Unf.SF",
"Total.Bsmt.SF", "Bsmt.Full.Bath", "Bsmt.Half.Bath", "Garage.Type", "Garage.Yr.Blt", "Garage.Finish", "Garage.Cars",
"Garage.Area", "Garage.Qual", "Garage.Cond", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch", "X3Ssn.Porch",
"Screen.Porch", "Pool.Area", "Fence", "Fireplace.Qu", "Pool.QC", "Misc.Feature", "Misc.Val", "Yr.Sold", "Mo.Sold", "Sale.Type",
"Sale.Condition", "Mas.Vnr.Type", "Mas.Vnr.Area", "X1st.Flr.SF", "X2nd.Flr.SF", "Low.Qual.Fin.SF", "TotRms.AbvGrd", "Condition.2","Alley")
ames_train_red <- ames_train[,!(names(ames_train) %in% drops)]
ames_train_red %>% group_by(MS.SubClass) %>% summarise(n())
ames_train_red %>% group_by(MS.Zoning) %>% summarise(n())
ames_train_red %>% group_by(Lot.Shape) %>% summarise(n())
ames_train_red %>% group_by(Land.Contour) %>% summarise(n())
ames_train_red %>% group_by(Land.Contour) %>% summarise(n())
ames_train_red %>% group_by(Utilities) %>% summarise(n())
ames_train_red %>% group_by(Lot.Config) %>% summarise(n())
ames_train_red %>% group_by(Land.Slope) %>% summarise(n())
library(MASS)
model.AIC <- stepAIC(model.full, k = 2, trace = FALSE)
model.full <- lm(log(price) ~ ., data = ames_train_red)
plot(model.AIC$resids)
sqrt(mean(ames_train_red$price - exp(predict(model.AIC, ames_train_red))))
ggplot(data = ames_train, aes(price, Overall.Cond)) + geom_bar()
ggplot(data = ames_train, aes(price, Overall.Cond)) + geom_bar(stat=mean)
ggplot(data = ames_train, aes(price, Overall.Cond)) + boxplot()
ggplot(data = ames_train, aes(price, Overall.Cond)) + geom_boxplot()
ggplot(data = ames_train, aes(price, as.character(Overall.Cond))) + geom_bar()
ggplot(data = ames_train, aes(as.character(Overall.Cond), price)) + geom_bar()
ggplot(data = ames_train, aes(price, as.character(Overall.Cond))) + geom_boxplot()
ggplot(data = ames_train, aes(price, as.character(Overall.Cond))) + geom_boxplot() + scale_x_continuous(labels = dollar)
ggplot(data = ames_train, aes(price, as.factor(as.character(Overall.Cond)))) + geom_boxplot() + scale_x_continuous(labels = dollar)
ggplot(data = ames_train, aes(price, factor(as.character(Overall.Cond)))) + geom_boxplot() + scale_x_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = as.character(Overall.Cond))) + geom_boxplot() + scale_x_continuous(labels = dollar)
ggplot(data = ames_train, aes(x = price, y = as.character(Overall.Cond))) + geom_boxplot() + scale_x_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = as.character(Overall.Cond))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = as.character(Overall.Quak))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = as.character(Overall.Qual))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(Overall.Qual))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(MS.SubClass))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(Bldg.Type))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = Year.Built)) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = Year.Built)) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = log(Year.Built))) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = Year.Built)) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = Year.Built)) + geom_jitter() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(bathrooms))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = log(area))) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = log(Lot.Area))) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = log(price), x = log(area))) + geom_point() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(porch_dummy))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(basement))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(basement_dummy))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(porch_dummy))) + geom_boxplot() + scale_y_continuous(labels = dollar)
ggplot(data = ames_train, aes(y = price, x = factor(pool_dummy))) + geom_boxplot() + scale_y_continuous(labels = dollar)
model.BIC <- stepAIC(model.full, k = log(834), trace = FALSE)
sqrt(mean(ames_train_red$price - exp(predict(model.BIC, ames_train_red))))
